% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/cast2mlydata.R
\name{cast2mlydata}
\alias{cast2mlydata}
\title{Cast a Data Frame as a \code{mlydata} or \code{mlydataList} Object}
\usage{
cast2mlydata(x, year.var = "year", month.var = "month", value.var,
  variable.var = NULL, fun.aggregate = NULL)
}
\arguments{
\item{x}{a data frame.}

\item{year.var}{the name of the column which stores year.}

\item{month.var}{the name of the column which stores month.}

\item{value.var}{the name of the column which stores values. Can have
several elements.}

\item{variable.var}{the name of the column which stores the variable names.}

\item{fun.aggregate}{aggregation function needed if variables do not identify a single observation
for each output cell. Defaults to length (with a message) if needed but not specified.
See \code{\link{decast}}.}
}
\value{
A \code{mlydata} object.
}
\description{
Cast a data frame as a \code{mlydata} or \code{mlydataList} object.
}
\details{
If the length of \code{value.var} is larger than 1, each variable in \code{value.var}
will be casted as a \code{mlydata} object, and a \code{mlydataList} will be returned.\cr
If the \code{variable.var} is specified, each value in \code{variable.var} corresponding
to a variable, and corresponding row will be casted into a \code{mlydata} object in
the returned \code{mlydataList} object.
}
\examples{
x <- data.frame(year = rep(1991 : 1993, each = 3), month = rep(3 : 1, 3), value = 1 : 9)
md <- cast2mlydata(x, year.var = 'year', month.var = 'month', value.var = 'value', fun.aggregate = mean)

data(sst)
cast2mlydata(sst, value.var = c('nino12', 'nino3'))

sst.melt <- melt(sst, id.var = c('year', 'month'))
sst.cast <- cast2mlydata(sst.melt, value.var = 'value', variable.var = 'variable')
sst.remelt <- melt(sst.cast)
}

